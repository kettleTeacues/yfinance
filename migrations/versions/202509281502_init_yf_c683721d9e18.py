"""init_yf

Revision ID: c683721d9e18
Revises: b247d23226f9
Create Date: 2025-09-28 15:02:13.647769

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c683721d9e18'
down_revision: Union[str, Sequence[str], None] = 'b247d23226f9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stock_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=True, comment='銘柄シンボル'),
    sa.Column('long_name', sa.String(length=255), nullable=True, comment='会社正式名称'),
    sa.Column('short_name', sa.String(length=100), nullable=True, comment='会社略称'),
    sa.Column('address1', sa.String(length=255), nullable=True, comment='住所1'),
    sa.Column('address2', sa.String(length=255), nullable=True, comment='住所2'),
    sa.Column('city', sa.String(length=100), nullable=True, comment='市区町村'),
    sa.Column('zip_code', sa.String(length=20), nullable=True, comment='郵便番号'),
    sa.Column('country', sa.String(length=50), nullable=True, comment='国'),
    sa.Column('phone', sa.String(length=50), nullable=True, comment='電話番号'),
    sa.Column('website', sa.String(length=500), nullable=True, comment='ウェブサイト'),
    sa.Column('ir_website', sa.String(length=500), nullable=True, comment='IR専用ウェブサイト'),
    sa.Column('industry', sa.String(length=100), nullable=True, comment='業界'),
    sa.Column('industry_key', sa.String(length=100), nullable=True, comment='業界キー'),
    sa.Column('industry_disp', sa.String(length=100), nullable=True, comment='業界表示名'),
    sa.Column('sector', sa.String(length=100), nullable=True, comment='セクター'),
    sa.Column('sector_key', sa.String(length=100), nullable=True, comment='セクターキー'),
    sa.Column('sector_disp', sa.String(length=100), nullable=True, comment='セクター表示名'),
    sa.Column('long_business_summary', sa.Text(), nullable=True, comment='事業概要'),
    sa.Column('full_time_employees', sa.Integer(), nullable=True, comment='正社員数'),
    sa.Column('currency', sa.String(length=10), nullable=True, comment='通貨'),
    sa.Column('current_price', sa.Float(), nullable=True, comment='現在価格'),
    sa.Column('previous_close', sa.Float(), nullable=True, comment='前日終値'),
    sa.Column('open_price', sa.Float(), nullable=True, comment='始値'),
    sa.Column('day_low', sa.Float(), nullable=True, comment='日中安値'),
    sa.Column('day_high', sa.Float(), nullable=True, comment='日中高値'),
    sa.Column('regular_market_previous_close', sa.Float(), nullable=True, comment='通常市場前日終値'),
    sa.Column('regular_market_open', sa.Float(), nullable=True, comment='通常市場始値'),
    sa.Column('regular_market_day_low', sa.Float(), nullable=True, comment='通常市場日中安値'),
    sa.Column('regular_market_day_high', sa.Float(), nullable=True, comment='通常市場日中高値'),
    sa.Column('regular_market_price', sa.Float(), nullable=True, comment='通常市場価格'),
    sa.Column('regular_market_change', sa.Float(), nullable=True, comment='通常市場変動額'),
    sa.Column('regular_market_change_percent', sa.Float(), nullable=True, comment='通常市場変動率'),
    sa.Column('fifty_two_week_low', sa.Float(), nullable=True, comment='52週安値'),
    sa.Column('fifty_two_week_high', sa.Float(), nullable=True, comment='52週高値'),
    sa.Column('fifty_two_week_change', sa.Float(), nullable=True, comment='52週変動率'),
    sa.Column('fifty_two_week_change_percent', sa.Float(), nullable=True, comment='52週変動率（%）'),
    sa.Column('all_time_high', sa.Float(), nullable=True, comment='史上最高値'),
    sa.Column('all_time_low', sa.Float(), nullable=True, comment='史上最安値'),
    sa.Column('fifty_day_average', sa.Float(), nullable=True, comment='50日移動平均'),
    sa.Column('fifty_day_average_change', sa.Float(), nullable=True, comment='50日移動平均からの変動額'),
    sa.Column('fifty_day_average_change_percent', sa.Float(), nullable=True, comment='50日移動平均からの変動率'),
    sa.Column('two_hundred_day_average', sa.Float(), nullable=True, comment='200日移動平均'),
    sa.Column('two_hundred_day_average_change', sa.Float(), nullable=True, comment='200日移動平均からの変動額'),
    sa.Column('two_hundred_day_average_change_percent', sa.Float(), nullable=True, comment='200日移動平均からの変動率'),
    sa.Column('volume', sa.Float(), nullable=True, comment='出来高'),
    sa.Column('regular_market_volume', sa.Float(), nullable=True, comment='通常市場出来高'),
    sa.Column('average_volume', sa.Float(), nullable=True, comment='平均出来高'),
    sa.Column('average_volume_10days', sa.Float(), nullable=True, comment='10日平均出来高'),
    sa.Column('average_daily_volume_10day', sa.Float(), nullable=True, comment='10日平均日次出来高'),
    sa.Column('average_daily_volume_3month', sa.Float(), nullable=True, comment='3ヶ月平均日次出来高'),
    sa.Column('bid', sa.Float(), nullable=True, comment='買値'),
    sa.Column('ask', sa.Float(), nullable=True, comment='売値'),
    sa.Column('bid_size', sa.Float(), nullable=True, comment='買気配数量'),
    sa.Column('ask_size', sa.Float(), nullable=True, comment='売気配数量'),
    sa.Column('dividend_rate', sa.Float(), nullable=True, comment='配当レート'),
    sa.Column('dividend_yield', sa.Float(), nullable=True, comment='配当利回り'),
    sa.Column('ex_dividend_date', sa.String(length=24), nullable=True, comment='配当落ち日'),
    sa.Column('payout_ratio', sa.Float(), nullable=True, comment='配当性向'),
    sa.Column('five_year_avg_dividend_yield', sa.Float(), nullable=True, comment='5年平均配当利回り'),
    sa.Column('trailing_annual_dividend_rate', sa.Float(), nullable=True, comment='過去12ヶ月配当レート'),
    sa.Column('trailing_annual_dividend_yield', sa.Float(), nullable=True, comment='過去12ヶ月配当利回り'),
    sa.Column('last_dividend_value', sa.Float(), nullable=True, comment='最新配当額'),
    sa.Column('last_dividend_date', sa.String(length=24), nullable=True, comment='最新配当日'),
    sa.Column('last_split_factor', sa.String(length=20), nullable=True, comment='最新株式分割比率'),
    sa.Column('last_split_date', sa.String(length=24), nullable=True, comment='最新株式分割日'),
    sa.Column('market_cap', sa.Float(), nullable=True, comment='時価総額'),
    sa.Column('enterprise_value', sa.Float(), nullable=True, comment='企業価値'),
    sa.Column('shares_outstanding', sa.Float(), nullable=True, comment='発行済株式数'),
    sa.Column('float_shares', sa.Float(), nullable=True, comment='流通株式数'),
    sa.Column('implied_shares_outstanding', sa.Float(), nullable=True, comment='推定発行済株式数'),
    sa.Column('held_percent_insiders', sa.Float(), nullable=True, comment='内部者保有率'),
    sa.Column('held_percent_institutions', sa.Float(), nullable=True, comment='機関投資家保有率'),
    sa.Column('beta', sa.Float(), nullable=True, comment='ベータ値'),
    sa.Column('trailing_pe', sa.Float(), nullable=True, comment='実績PER'),
    sa.Column('forward_pe', sa.Float(), nullable=True, comment='予想PER'),
    sa.Column('price_to_book', sa.Float(), nullable=True, comment='PBR（株価純資産倍率）'),
    sa.Column('price_to_sales_trailing_12months', sa.Float(), nullable=True, comment='PSR（株価売上倍率）'),
    sa.Column('enterprise_to_revenue', sa.Float(), nullable=True, comment='EV/売上倍率'),
    sa.Column('enterprise_to_ebitda', sa.Float(), nullable=True, comment='EV/EBITDA倍率'),
    sa.Column('trailing_peg_ratio', sa.Float(), nullable=True, comment='PEGレシオ'),
    sa.Column('total_cash', sa.Float(), nullable=True, comment='総現金'),
    sa.Column('total_cash_per_share', sa.Float(), nullable=True, comment='1株当たり現金'),
    sa.Column('total_debt', sa.Float(), nullable=True, comment='総負債'),
    sa.Column('total_revenue', sa.Float(), nullable=True, comment='総売上'),
    sa.Column('revenue_per_share', sa.Float(), nullable=True, comment='1株当たり売上'),
    sa.Column('ebitda', sa.Float(), nullable=True, comment='EBITDA'),
    sa.Column('gross_profits', sa.Float(), nullable=True, comment='売上総利益'),
    sa.Column('net_income_to_common', sa.Float(), nullable=True, comment='普通株主帰属純利益'),
    sa.Column('book_value', sa.Float(), nullable=True, comment='1株当たり純資産'),
    sa.Column('quick_ratio', sa.Float(), nullable=True, comment='当座比率'),
    sa.Column('current_ratio', sa.Float(), nullable=True, comment='流動比率'),
    sa.Column('return_on_assets', sa.Float(), nullable=True, comment='ROA（総資産利益率）'),
    sa.Column('return_on_equity', sa.Float(), nullable=True, comment='ROE（自己資本利益率）'),
    sa.Column('profit_margins', sa.Float(), nullable=True, comment='純利益率'),
    sa.Column('gross_margins', sa.Float(), nullable=True, comment='売上総利益率'),
    sa.Column('ebitda_margins', sa.Float(), nullable=True, comment='EBITDA利益率'),
    sa.Column('operating_margins', sa.Float(), nullable=True, comment='営業利益率'),
    sa.Column('earnings_growth', sa.Float(), nullable=True, comment='利益成長率'),
    sa.Column('revenue_growth', sa.Float(), nullable=True, comment='売上成長率'),
    sa.Column('earnings_quarterly_growth', sa.Float(), nullable=True, comment='四半期利益成長率'),
    sa.Column('trailing_eps', sa.Float(), nullable=True, comment='実績EPS'),
    sa.Column('forward_eps', sa.Float(), nullable=True, comment='予想EPS'),
    sa.Column('eps_trailing_twelve_months', sa.Float(), nullable=True, comment='過去12ヶ月EPS'),
    sa.Column('eps_forward', sa.Float(), nullable=True, comment='フォワードEPS'),
    sa.Column('target_high_price', sa.Float(), nullable=True, comment='目標株価上限'),
    sa.Column('target_low_price', sa.Float(), nullable=True, comment='目標株価下限'),
    sa.Column('target_mean_price', sa.Float(), nullable=True, comment='目標株価平均'),
    sa.Column('target_median_price', sa.Float(), nullable=True, comment='目標株価中央値'),
    sa.Column('recommendation_mean', sa.Float(), nullable=True, comment='推奨平均'),
    sa.Column('recommendation_key', sa.String(length=20), nullable=True, comment='推奨キー'),
    sa.Column('number_of_analyst_opinions', sa.Integer(), nullable=True, comment='アナリスト意見数'),
    sa.Column('average_analyst_rating', sa.String(length=50), nullable=True, comment='アナリスト平均評価'),
    sa.Column('exchange', sa.String(length=50), nullable=True, comment='取引所'),
    sa.Column('full_exchange_name', sa.String(length=100), nullable=True, comment='取引所正式名称'),
    sa.Column('market', sa.String(length=50), nullable=True, comment='市場'),
    sa.Column('market_state', sa.String(length=20), nullable=True, comment='市場状態'),
    sa.Column('quote_type', sa.String(length=20), nullable=True, comment='商品タイプ'),
    sa.Column('tradeable', sa.String(length=10), nullable=True, comment='取引可能フラグ'),
    sa.Column('exchange_timezone_name', sa.String(length=50), nullable=True, comment='取引所タイムゾーン名'),
    sa.Column('exchange_timezone_short_name', sa.String(length=10), nullable=True, comment='取引所タイムゾーン略称'),
    sa.Column('gmt_off_set_milliseconds', sa.Float(), nullable=True, comment='GMT オフセット（ミリ秒）'),
    sa.Column('regular_market_time', sa.String(length=24), nullable=True, comment='通常市場時間'),
    sa.Column('audit_risk', sa.Integer(), nullable=True, comment='監査リスク'),
    sa.Column('board_risk', sa.Integer(), nullable=True, comment='取締役会リスク'),
    sa.Column('compensation_risk', sa.Integer(), nullable=True, comment='報酬リスク'),
    sa.Column('shareholder_rights_risk', sa.Integer(), nullable=True, comment='株主権リスク'),
    sa.Column('overall_risk', sa.Integer(), nullable=True, comment='総合リスク'),
    sa.Column('last_fiscal_year_end', sa.String(length=24), nullable=True, comment='前会計年度末'),
    sa.Column('next_fiscal_year_end', sa.String(length=24), nullable=True, comment='次会計年度末'),
    sa.Column('most_recent_quarter', sa.String(length=24), nullable=True, comment='最新四半期'),
    sa.Column('earnings_timestamp', sa.String(length=24), nullable=True, comment='決算発表タイムスタンプ'),
    sa.Column('earnings_timestamp_start', sa.String(length=24), nullable=True, comment='決算発表開始時刻'),
    sa.Column('earnings_timestamp_end', sa.String(length=24), nullable=True, comment='決算発表終了時刻'),
    sa.Column('is_earnings_date_estimate', sa.String(length=10), nullable=True, comment='決算日推定フラグ'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('actions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.String(length=24), nullable=False),
    sa.Column('dividends', sa.Float(), nullable=True, comment='配当額'),
    sa.Column('stock_splits', sa.Float(), nullable=True, comment='株式分割比率'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_actions_date'), 'actions', ['date'], unique=False)
    op.create_index(op.f('ix_actions_symbol'), 'actions', ['symbol'], unique=False)
    op.create_table('balancesheets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.String(length=24), nullable=False),
    sa.Column('period_type', sa.String(length=20), nullable=False, comment='annual, quarterly'),
    sa.Column('total_assets', sa.Float(), nullable=True, comment='総資産'),
    sa.Column('current_assets', sa.Float(), nullable=True, comment='流動資産'),
    sa.Column('non_current_assets', sa.Float(), nullable=True, comment='固定資産'),
    sa.Column('cash_and_cash_equivalents', sa.Float(), nullable=True, comment='現金および現金同等物'),
    sa.Column('other_short_term_investments', sa.Float(), nullable=True, comment='その他短期投資'),
    sa.Column('cash_cash_equivalents_and_short_term_investments', sa.Float(), nullable=True, comment='現金・現金同等物・短期投資'),
    sa.Column('accounts_receivable', sa.Float(), nullable=True, comment='売掛金'),
    sa.Column('gross_accounts_receivable', sa.Float(), nullable=True, comment='売掛金総額'),
    sa.Column('inventory', sa.Float(), nullable=True, comment='棚卸資産'),
    sa.Column('other_current_assets', sa.Float(), nullable=True, comment='その他流動資産'),
    sa.Column('net_ppe', sa.Float(), nullable=True, comment='有形固定資産純額'),
    sa.Column('gross_ppe', sa.Float(), nullable=True, comment='有形固定資産総額'),
    sa.Column('land_and_improvements', sa.Float(), nullable=True, comment='土地および改良'),
    sa.Column('buildings_and_improvements', sa.Float(), nullable=True, comment='建物および改良'),
    sa.Column('machinery_furniture_equipment', sa.Float(), nullable=True, comment='機械・家具・設備'),
    sa.Column('construction_in_progress', sa.Float(), nullable=True, comment='建設仮勘定'),
    sa.Column('properties', sa.Float(), nullable=True, comment='不動産'),
    sa.Column('goodwill_and_other_intangible_assets', sa.Float(), nullable=True, comment='のれんおよびその他無形資産'),
    sa.Column('other_intangible_assets', sa.Float(), nullable=True, comment='その他無形資産'),
    sa.Column('investment_in_financial_assets', sa.Float(), nullable=True, comment='金融資産投資'),
    sa.Column('available_for_sale_securities', sa.Float(), nullable=True, comment='売却可能有価証券'),
    sa.Column('non_current_deferred_taxes_assets', sa.Float(), nullable=True, comment='固定繰延税金資産'),
    sa.Column('defined_pension_benefit', sa.Float(), nullable=True, comment='確定給付年金'),
    sa.Column('other_non_current_assets', sa.Float(), nullable=True, comment='その他固定資産'),
    sa.Column('total_liabilities_net_minority_interest', sa.Float(), nullable=True, comment='総負債（少数株主持分除く）'),
    sa.Column('current_liabilities', sa.Float(), nullable=True, comment='流動負債'),
    sa.Column('total_non_current_liabilities_net_minority_interest', sa.Float(), nullable=True, comment='固定負債合計（少数株主持分除く）'),
    sa.Column('accounts_payable', sa.Float(), nullable=True, comment='買掛金'),
    sa.Column('total_tax_payable', sa.Float(), nullable=True, comment='未払税金'),
    sa.Column('payables', sa.Float(), nullable=True, comment='債務'),
    sa.Column('pension_and_other_post_retirement_benefit_plans_current', sa.Float(), nullable=True, comment='年金・退職後給付制度（流動）'),
    sa.Column('other_current_liabilities', sa.Float(), nullable=True, comment='その他流動負債'),
    sa.Column('long_term_provisions', sa.Float(), nullable=True, comment='長期引当金'),
    sa.Column('non_current_pension_and_other_postretirement_benefit_plans', sa.Float(), nullable=True, comment='年金・退職後給付制度（固定）'),
    sa.Column('other_non_current_liabilities', sa.Float(), nullable=True, comment='その他固定負債'),
    sa.Column('stockholders_equity', sa.Float(), nullable=True, comment='株主資本'),
    sa.Column('minority_interest', sa.Float(), nullable=True, comment='少数株主持分'),
    sa.Column('total_equity_gross_minority_interest', sa.Float(), nullable=True, comment='総資本（少数株主持分含む）'),
    sa.Column('total_capitalization', sa.Float(), nullable=True, comment='総資本'),
    sa.Column('common_stock_equity', sa.Float(), nullable=True, comment='普通株主資本'),
    sa.Column('net_tangible_assets', sa.Float(), nullable=True, comment='純有形資産'),
    sa.Column('working_capital', sa.Float(), nullable=True, comment='運転資本'),
    sa.Column('invested_capital', sa.Float(), nullable=True, comment='投下資本'),
    sa.Column('tangible_book_value', sa.Float(), nullable=True, comment='有形簿価'),
    sa.Column('share_issued', sa.Float(), nullable=True, comment='発行済株式数'),
    sa.Column('ordinary_shares_number', sa.Float(), nullable=True, comment='普通株式数'),
    sa.Column('treasury_shares_number', sa.Float(), nullable=True, comment='自己株式数'),
    sa.Column('common_stock', sa.Float(), nullable=True, comment='普通株式'),
    sa.Column('capital_stock', sa.Float(), nullable=True, comment='資本金'),
    sa.Column('additional_paid_in_capital', sa.Float(), nullable=True, comment='資本剰余金'),
    sa.Column('retained_earnings', sa.Float(), nullable=True, comment='利益剰余金'),
    sa.Column('treasury_stock', sa.Float(), nullable=True, comment='自己株式'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_balancesheets_date'), 'balancesheets', ['date'], unique=False)
    op.create_index(op.f('ix_balancesheets_symbol'), 'balancesheets', ['symbol'], unique=False)
    op.create_table('calendars',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('ex_dividend_date', sa.String(length=24), nullable=True, comment='配当落ち日'),
    sa.Column('earnings_date', sa.String(length=24), nullable=True, comment='決算発表日（主要日程）'),
    sa.Column('earnings_high', sa.Float(), nullable=True, comment='収益予測上限'),
    sa.Column('earnings_low', sa.Float(), nullable=True, comment='収益予測下限'),
    sa.Column('earnings_average', sa.Float(), nullable=True, comment='収益予測平均'),
    sa.Column('revenue_high', sa.Float(), nullable=True, comment='売上予測上限'),
    sa.Column('revenue_low', sa.Float(), nullable=True, comment='売上予測下限'),
    sa.Column('revenue_average', sa.Float(), nullable=True, comment='売上予測平均'),
    sa.Column('dividend_payment_date', sa.String(length=24), nullable=True, comment='配当支払日'),
    sa.Column('annual_general_meeting_date', sa.String(length=24), nullable=True, comment='株主総会日'),
    sa.Column('fiscal_year_end', sa.String(length=24), nullable=True, comment='会計年度末'),
    sa.Column('data_source', sa.String(length=50), nullable=True, comment='データソース'),
    sa.Column('last_updated', sa.String(length=24), nullable=True, comment='データ最終更新日'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_calendars_symbol'), 'calendars', ['symbol'], unique=False)
    op.create_table('cash_flows',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.String(length=24), nullable=False),
    sa.Column('period_type', sa.String(length=20), nullable=False, comment='annual, quarterly, ttm'),
    sa.Column('operating_cash_flow', sa.Float(), nullable=True, comment='営業キャッシュフロー'),
    sa.Column('investing_cash_flow', sa.Float(), nullable=True, comment='投資キャッシュフロー'),
    sa.Column('financing_cash_flow', sa.Float(), nullable=True, comment='財務キャッシュフロー'),
    sa.Column('free_cash_flow', sa.Float(), nullable=True, comment='フリーキャッシュフロー'),
    sa.Column('beginning_cash_position', sa.Float(), nullable=True, comment='期首現金残高'),
    sa.Column('end_cash_position', sa.Float(), nullable=True, comment='期末現金残高'),
    sa.Column('changes_in_cash', sa.Float(), nullable=True, comment='現金の変動'),
    sa.Column('net_income_from_continuing_operations', sa.Float(), nullable=True, comment='継続事業からの純利益'),
    sa.Column('depreciation_and_amortization', sa.Float(), nullable=True, comment='減価償却費'),
    sa.Column('depreciation', sa.Float(), nullable=True, comment='減価償却費（個別）'),
    sa.Column('net_foreign_currency_exchange_gain_loss', sa.Float(), nullable=True, comment='外国為替差損益（純額）'),
    sa.Column('gain_loss_on_investment_securities', sa.Float(), nullable=True, comment='投資有価証券損益'),
    sa.Column('other_non_cash_items', sa.Float(), nullable=True, comment='その他非現金項目'),
    sa.Column('change_in_working_capital', sa.Float(), nullable=True, comment='運転資本の変動'),
    sa.Column('change_in_receivables', sa.Float(), nullable=True, comment='売掛金の変動'),
    sa.Column('change_in_inventory', sa.Float(), nullable=True, comment='棚卸資産の変動'),
    sa.Column('change_in_payable', sa.Float(), nullable=True, comment='買掛金の変動'),
    sa.Column('change_in_other_current_assets', sa.Float(), nullable=True, comment='その他流動資産の変動'),
    sa.Column('change_in_other_current_liabilities', sa.Float(), nullable=True, comment='その他流動負債の変動'),
    sa.Column('interest_paid_cfo', sa.Float(), nullable=True, comment='支払利息（営業CF）'),
    sa.Column('interest_received_cfo', sa.Float(), nullable=True, comment='受取利息（営業CF）'),
    sa.Column('taxes_refund_paid', sa.Float(), nullable=True, comment='税金の支払・還付'),
    sa.Column('capital_expenditure', sa.Float(), nullable=True, comment='設備投資'),
    sa.Column('purchase_of_ppe', sa.Float(), nullable=True, comment='有形固定資産の取得'),
    sa.Column('sale_of_ppe', sa.Float(), nullable=True, comment='有形固定資産の売却'),
    sa.Column('net_ppe_purchase_and_sale', sa.Float(), nullable=True, comment='有形固定資産の取得・売却（純額）'),
    sa.Column('capital_expenditure_reported', sa.Float(), nullable=True, comment='報告設備投資'),
    sa.Column('purchase_of_investment', sa.Float(), nullable=True, comment='投資の取得'),
    sa.Column('sale_of_investment', sa.Float(), nullable=True, comment='投資の売却'),
    sa.Column('net_investment_purchase_and_sale', sa.Float(), nullable=True, comment='投資の取得・売却（純額）'),
    sa.Column('net_other_investing_changes', sa.Float(), nullable=True, comment='その他投資活動の変動'),
    sa.Column('cash_dividends_paid', sa.Float(), nullable=True, comment='配当金の支払'),
    sa.Column('common_stock_dividend_paid', sa.Float(), nullable=True, comment='普通株式配当金の支払'),
    sa.Column('net_common_stock_issuance', sa.Float(), nullable=True, comment='普通株式の発行（純額）'),
    sa.Column('common_stock_payments', sa.Float(), nullable=True, comment='普通株式の支払'),
    sa.Column('repurchase_of_capital_stock', sa.Float(), nullable=True, comment='自己株式の取得'),
    sa.Column('net_other_financing_charges', sa.Float(), nullable=True, comment='その他財務活動費用'),
    sa.Column('effect_of_exchange_rate_changes', sa.Float(), nullable=True, comment='為替レート変動の影響'),
    sa.Column('other_cash_adjustment_outside_change_in_cash', sa.Float(), nullable=True, comment='現金変動外のその他調整'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cash_flows_date'), 'cash_flows', ['date'], unique=False)
    op.create_index(op.f('ix_cash_flows_symbol'), 'cash_flows', ['symbol'], unique=False)
    op.create_table('dividends',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.String(length=24), nullable=False, comment='配当日'),
    sa.Column('dividends', sa.Float(), nullable=False, comment='配当金額（1株あたり）'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dividends_date'), 'dividends', ['date'], unique=False)
    op.create_index(op.f('ix_dividends_symbol'), 'dividends', ['symbol'], unique=False)
    op.create_table('earnings_dates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.String(length=24), nullable=False, comment='決算発表日'),
    sa.Column('eps_estimate', sa.Float(), nullable=True, comment='予想EPS（1株あたり利益予想）'),
    sa.Column('reported_eps', sa.Float(), nullable=True, comment='実績EPS（1株あたり利益実績）'),
    sa.Column('surprise_percent', sa.Float(), nullable=True, comment='サプライズ率（%）実績が予想をどの程度上回った/下回ったかの割合'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_earnings_dates_date'), 'earnings_dates', ['date'], unique=False)
    op.create_index(op.f('ix_earnings_dates_symbol'), 'earnings_dates', ['symbol'], unique=False)
    op.create_table('earnings_estimates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True, comment='今期'),
    sa.Column('period_type', sa.String(length=10), nullable=False, comment='期間タイプ（0q, +1q, 0y, +1yなど）'),
    sa.Column('avg_estimate', sa.Float(), nullable=True, comment='平均予想EPS'),
    sa.Column('low_estimate', sa.Float(), nullable=True, comment='最低予想EPS'),
    sa.Column('high_estimate', sa.Float(), nullable=True, comment='最高予想EPS'),
    sa.Column('year_ago_eps', sa.Float(), nullable=True, comment='前年同期EPS'),
    sa.Column('number_of_analysts', sa.Integer(), nullable=True, comment='アナリスト数'),
    sa.Column('growth_rate', sa.Float(), nullable=True, comment='成長率'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_earnings_estimates_period_type'), 'earnings_estimates', ['period_type'], unique=False)
    op.create_index(op.f('ix_earnings_estimates_symbol'), 'earnings_estimates', ['symbol'], unique=False)
    op.create_table('earnings_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.String(length=24), nullable=False, comment='四半期末日'),
    sa.Column('eps_actual', sa.Float(), nullable=True, comment='実績EPS'),
    sa.Column('eps_estimate', sa.Float(), nullable=True, comment='予想EPS'),
    sa.Column('eps_difference', sa.Float(), nullable=True, comment='EPS差額（実績-予想）'),
    sa.Column('surprise_percent', sa.Float(), nullable=True, comment='サプライズ率'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_earnings_history_date'), 'earnings_history', ['date'], unique=False)
    op.create_index(op.f('ix_earnings_history_symbol'), 'earnings_history', ['symbol'], unique=False)
    op.create_table('eps_revisions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True, comment='今期'),
    sa.Column('period_type', sa.String(length=10), nullable=False, comment='期間タイプ（0q, +1q, 0y, +1yなど）'),
    sa.Column('up_last_7days', sa.Integer(), nullable=True, comment='過去7日間の上方修正数'),
    sa.Column('up_last_30days', sa.Integer(), nullable=True, comment='過去30日間の上方修正数'),
    sa.Column('down_last_7days', sa.Integer(), nullable=True, comment='過去7日間の下方修正数'),
    sa.Column('down_last_30days', sa.Integer(), nullable=True, comment='過去30日間の下方修正数'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_eps_revisions_period_type'), 'eps_revisions', ['period_type'], unique=False)
    op.create_index(op.f('ix_eps_revisions_symbol'), 'eps_revisions', ['symbol'], unique=False)
    op.create_table('eps_trends',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True, comment='今期'),
    sa.Column('period_type', sa.String(length=10), nullable=False, comment='期間タイプ（0q, +1q, 0y, +1yなど）'),
    sa.Column('current', sa.Float(), nullable=True, comment='現在の予想EPS'),
    sa.Column('days_ago_7', sa.Float(), nullable=True, comment='7日前の予想EPS'),
    sa.Column('days_ago_30', sa.Float(), nullable=True, comment='30日前の予想EPS'),
    sa.Column('days_ago_60', sa.Float(), nullable=True, comment='60日前の予想EPS'),
    sa.Column('days_ago_90', sa.Float(), nullable=True, comment='90日前の予想EPS'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_eps_trends_period_type'), 'eps_trends', ['period_type'], unique=False)
    op.create_index(op.f('ix_eps_trends_symbol'), 'eps_trends', ['symbol'], unique=False)
    op.create_table('fast_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=True, comment='通貨'),
    sa.Column('exchange', sa.String(length=50), nullable=True, comment='取引所'),
    sa.Column('quote_type', sa.String(length=50), nullable=True, comment='商品タイプ'),
    sa.Column('timezone', sa.String(length=50), nullable=True, comment='タイムゾーン'),
    sa.Column('last_price', sa.Float(), nullable=True, comment='最新価格'),
    sa.Column('open_price', sa.Float(), nullable=True, comment='始値'),
    sa.Column('previous_close', sa.Float(), nullable=True, comment='前日終値'),
    sa.Column('regular_market_previous_close', sa.Float(), nullable=True, comment='通常市場前日終値'),
    sa.Column('day_high', sa.Float(), nullable=True, comment='日中高値'),
    sa.Column('day_low', sa.Float(), nullable=True, comment='日中安値'),
    sa.Column('year_high', sa.Float(), nullable=True, comment='52週高値'),
    sa.Column('year_low', sa.Float(), nullable=True, comment='52週安値'),
    sa.Column('year_change', sa.Float(), nullable=True, comment='年初来変動率'),
    sa.Column('last_volume', sa.Float(), nullable=True, comment='最新出来高'),
    sa.Column('ten_day_average_volume', sa.Float(), nullable=True, comment='10日平均出来高'),
    sa.Column('three_month_average_volume', sa.Float(), nullable=True, comment='3ヶ月平均出来高'),
    sa.Column('fifty_day_average', sa.Float(), nullable=True, comment='50日移動平均'),
    sa.Column('two_hundred_day_average', sa.Float(), nullable=True, comment='200日移動平均'),
    sa.Column('market_cap', sa.Float(), nullable=True, comment='時価総額'),
    sa.Column('shares', sa.Float(), nullable=True, comment='発行済株式数'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_fast_info_symbol'), 'fast_info', ['symbol'], unique=False)
    op.create_table('financials',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.String(length=24), nullable=False, comment='財務年度末日'),
    sa.Column('period_type', sa.String(length=20), nullable=False, comment='annual, quarterly, ttm'),
    sa.Column('total_revenue', sa.Float(), nullable=True, comment='総売上高'),
    sa.Column('operating_revenue', sa.Float(), nullable=True, comment='営業売上高'),
    sa.Column('cost_of_revenue', sa.Float(), nullable=True, comment='売上原価'),
    sa.Column('gross_profit', sa.Float(), nullable=True, comment='売上総利益'),
    sa.Column('operating_expense', sa.Float(), nullable=True, comment='営業費用'),
    sa.Column('operating_income', sa.Float(), nullable=True, comment='営業利益'),
    sa.Column('total_expenses', sa.Float(), nullable=True, comment='総費用'),
    sa.Column('ebit', sa.Float(), nullable=True, comment='EBIT（利息・税引前利益）'),
    sa.Column('ebitda', sa.Float(), nullable=True, comment='EBITDA（利息・税・償却前利益）'),
    sa.Column('normalized_ebitda', sa.Float(), nullable=True, comment='正規化EBITDA'),
    sa.Column('pretax_income', sa.Float(), nullable=True, comment='税引前当期利益'),
    sa.Column('tax_provision', sa.Float(), nullable=True, comment='税金費用'),
    sa.Column('net_income', sa.Float(), nullable=True, comment='純利益'),
    sa.Column('net_income_common_stockholders', sa.Float(), nullable=True, comment='普通株主に帰属する純利益'),
    sa.Column('net_income_continuous_operations', sa.Float(), nullable=True, comment='継続事業からの純利益'),
    sa.Column('normalized_income', sa.Float(), nullable=True, comment='正規化純利益'),
    sa.Column('interest_income', sa.Float(), nullable=True, comment='受取利息'),
    sa.Column('interest_expense', sa.Float(), nullable=True, comment='支払利息'),
    sa.Column('net_interest_income', sa.Float(), nullable=True, comment='純金利収益'),
    sa.Column('interest_income_non_operating', sa.Float(), nullable=True, comment='営業外受取利息'),
    sa.Column('interest_expense_non_operating', sa.Float(), nullable=True, comment='営業外支払利息'),
    sa.Column('net_non_operating_interest_income_expense', sa.Float(), nullable=True, comment='営業外純金利損益'),
    sa.Column('other_non_operating_income_expenses', sa.Float(), nullable=True, comment='その他営業外損益'),
    sa.Column('special_income_charges', sa.Float(), nullable=True, comment='特別損益'),
    sa.Column('other_special_charges', sa.Float(), nullable=True, comment='その他特別費用'),
    sa.Column('total_unusual_items', sa.Float(), nullable=True, comment='異常項目合計'),
    sa.Column('total_unusual_items_excluding_goodwill', sa.Float(), nullable=True, comment='のれん除く異常項目合計'),
    sa.Column('tax_effect_of_unusual_items', sa.Float(), nullable=True, comment='異常項目の税効果'),
    sa.Column('tax_rate_for_calcs', sa.Float(), nullable=True, comment='計算用税率'),
    sa.Column('basic_average_shares', sa.Float(), nullable=True, comment='基本平均株式数'),
    sa.Column('diluted_average_shares', sa.Float(), nullable=True, comment='希薄化後平均株式数'),
    sa.Column('basic_eps', sa.Float(), nullable=True, comment='基本1株当たり利益'),
    sa.Column('diluted_eps', sa.Float(), nullable=True, comment='希薄化後1株当たり利益'),
    sa.Column('diluted_ni_availto_com_stockholders', sa.Float(), nullable=True, comment='希薄化後普通株主利用可能純利益'),
    sa.Column('minority_interests', sa.Float(), nullable=True, comment='少数株主持分損益'),
    sa.Column('net_income_including_noncontrolling_interests', sa.Float(), nullable=True, comment='非支配持分含む純利益'),
    sa.Column('otherunder_preferred_stock_dividend', sa.Float(), nullable=True, comment='優先株配当等'),
    sa.Column('reconciled_depreciation', sa.Float(), nullable=True, comment='調整後償却費'),
    sa.Column('reconciled_cost_of_revenue', sa.Float(), nullable=True, comment='調整後売上原価'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_financials_date'), 'financials', ['date'], unique=False)
    op.create_index(op.f('ix_financials_symbol'), 'financials', ['symbol'], unique=False)
    op.create_table('growth_estimates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True, comment='今期'),
    sa.Column('period_type', sa.String(length=10), nullable=False, comment='期間タイプ（0q, +1q, 0y, +1y, LTGなど）'),
    sa.Column('stock_trend', sa.Float(), nullable=True, comment='企業の成長トレンド'),
    sa.Column('index_trend', sa.Float(), nullable=True, comment='業界指数の成長トレンド'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_growth_estimates_period_type'), 'growth_estimates', ['period_type'], unique=False)
    op.create_index(op.f('ix_growth_estimates_symbol'), 'growth_estimates', ['symbol'], unique=False)
    op.create_table('history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.String(length=24), nullable=False, comment='取引日'),
    sa.Column('open', sa.Float(), nullable=True, comment='始値'),
    sa.Column('high', sa.Float(), nullable=True, comment='高値'),
    sa.Column('low', sa.Float(), nullable=True, comment='安値'),
    sa.Column('close', sa.Float(), nullable=True, comment='終値'),
    sa.Column('volume', sa.Float(), nullable=True, comment='出来高'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_history_date'), 'history', ['date'], unique=False)
    op.create_index(op.f('ix_history_symbol'), 'history', ['symbol'], unique=False)
    op.create_table('income_statements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.String(length=24), nullable=False, comment='財務期間末日'),
    sa.Column('total_revenue', sa.Float(), nullable=True, comment='総売上高'),
    sa.Column('operating_revenue', sa.Float(), nullable=True, comment='営業売上高'),
    sa.Column('cost_of_revenue', sa.Float(), nullable=True, comment='売上原価'),
    sa.Column('reconciled_cost_of_revenue', sa.Float(), nullable=True, comment='調整後売上原価'),
    sa.Column('gross_profit', sa.Float(), nullable=True, comment='売上総利益'),
    sa.Column('operating_expense', sa.Float(), nullable=True, comment='営業費用'),
    sa.Column('operating_income', sa.Float(), nullable=True, comment='営業利益'),
    sa.Column('total_operating_income_as_reported', sa.Float(), nullable=True, comment='報告営業利益'),
    sa.Column('total_expenses', sa.Float(), nullable=True, comment='総費用'),
    sa.Column('ebit', sa.Float(), nullable=True, comment='EBIT（利息・税引前利益）'),
    sa.Column('ebitda', sa.Float(), nullable=True, comment='EBITDA（利息・税・償却前利益）'),
    sa.Column('normalized_ebitda', sa.Float(), nullable=True, comment='正規化EBITDA'),
    sa.Column('interest_income', sa.Float(), nullable=True, comment='受取利息'),
    sa.Column('interest_expense', sa.Float(), nullable=True, comment='支払利息'),
    sa.Column('net_interest_income', sa.Float(), nullable=True, comment='純金利収益'),
    sa.Column('interest_income_non_operating', sa.Float(), nullable=True, comment='営業外受取利息'),
    sa.Column('interest_expense_non_operating', sa.Float(), nullable=True, comment='営業外支払利息'),
    sa.Column('net_non_operating_interest_income_expense', sa.Float(), nullable=True, comment='営業外純金利損益'),
    sa.Column('other_non_operating_income_expenses', sa.Float(), nullable=True, comment='その他営業外損益'),
    sa.Column('special_income_charges', sa.Float(), nullable=True, comment='特別損益'),
    sa.Column('other_special_charges', sa.Float(), nullable=True, comment='その他特別費用'),
    sa.Column('pretax_income', sa.Float(), nullable=True, comment='税引前当期利益'),
    sa.Column('tax_provision', sa.Float(), nullable=True, comment='税金費用'),
    sa.Column('net_income', sa.Float(), nullable=True, comment='純利益'),
    sa.Column('net_income_common_stockholders', sa.Float(), nullable=True, comment='普通株主に帰属する純利益'),
    sa.Column('net_income_continuous_operations', sa.Float(), nullable=True, comment='継続事業からの純利益'),
    sa.Column('net_income_from_continuing_operation_net_minority_interest', sa.Float(), nullable=True, comment='継続事業純利益（少数株主持分調整後）'),
    sa.Column('net_income_from_continuing_and_discontinued_operation', sa.Float(), nullable=True, comment='継続・非継続事業純利益'),
    sa.Column('net_income_including_noncontrolling_interests', sa.Float(), nullable=True, comment='非支配持分含む純利益'),
    sa.Column('normalized_income', sa.Float(), nullable=True, comment='正規化純利益'),
    sa.Column('total_unusual_items', sa.Float(), nullable=True, comment='異常項目合計'),
    sa.Column('total_unusual_items_excluding_goodwill', sa.Float(), nullable=True, comment='のれん除く異常項目合計'),
    sa.Column('tax_effect_of_unusual_items', sa.Float(), nullable=True, comment='異常項目の税効果'),
    sa.Column('tax_rate_for_calcs', sa.Float(), nullable=True, comment='計算用税率'),
    sa.Column('reconciled_depreciation', sa.Float(), nullable=True, comment='調整後償却費'),
    sa.Column('basic_average_shares', sa.Float(), nullable=True, comment='基本平均株式数'),
    sa.Column('diluted_average_shares', sa.Float(), nullable=True, comment='希薄化後平均株式数'),
    sa.Column('basic_eps', sa.Float(), nullable=True, comment='基本1株当たり利益'),
    sa.Column('diluted_eps', sa.Float(), nullable=True, comment='希薄化後1株当たり利益'),
    sa.Column('diluted_ni_availto_com_stockholders', sa.Float(), nullable=True, comment='希薄化後普通株主利用可能純利益'),
    sa.Column('minority_interests', sa.Float(), nullable=True, comment='少数株主持分損益'),
    sa.Column('otherunder_preferred_stock_dividend', sa.Float(), nullable=True, comment='優先株配当等'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_income_statements_date'), 'income_statements', ['date'], unique=False)
    op.create_index(op.f('ix_income_statements_symbol'), 'income_statements', ['symbol'], unique=False)
    op.create_table('insider_purchases',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('insider_purchases_last_6m', sa.String(length=100), nullable=False, comment='インサイダー取引項目名'),
    sa.Column('shares', sa.Float(), nullable=True, comment='株式数'),
    sa.Column('trans', sa.Integer(), nullable=True, comment='取引回数'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_insider_purchases_symbol'), 'insider_purchases', ['symbol'], unique=False)
    op.create_table('institutional_holders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.String(length=24), nullable=False, comment='報告日'),
    sa.Column('holder', sa.String(length=500), nullable=False, comment='機関投資家名'),
    sa.Column('pct_held', sa.Float(), nullable=True, comment='保有割合（%）'),
    sa.Column('shares', sa.Float(), nullable=True, comment='保有株式数'),
    sa.Column('value', sa.Float(), nullable=True, comment='保有株式価値（金額）'),
    sa.Column('pct_change', sa.Float(), nullable=True, comment='保有割合変動率（%）'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_institutional_holders_date'), 'institutional_holders', ['date'], unique=False)
    op.create_index(op.f('ix_institutional_holders_symbol'), 'institutional_holders', ['symbol'], unique=False)
    op.create_table('major_holders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('insiders_percent_held', sa.Float(), nullable=True, comment='インサイダー保有比率'),
    sa.Column('institutions_percent_held', sa.Float(), nullable=True, comment='機関投資家保有比率'),
    sa.Column('institutions_float_percent_held', sa.Float(), nullable=True, comment='機関投資家流通株式保有比率'),
    sa.Column('institutions_count', sa.Float(), nullable=True, comment='機関投資家数'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_major_holders_symbol'), 'major_holders', ['symbol'], unique=False)
    op.create_table('mutualfund_holders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('date', sa.String(length=24), nullable=False, comment='報告日'),
    sa.Column('holder', sa.String(length=500), nullable=False, comment='投資信託名'),
    sa.Column('pct_held', sa.Float(), nullable=True, comment='保有割合（%）'),
    sa.Column('shares', sa.Float(), nullable=True, comment='保有株式数'),
    sa.Column('value', sa.Float(), nullable=True, comment='保有株式価値（金額）'),
    sa.Column('pct_change', sa.Float(), nullable=True, comment='保有割合変動率（%）'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mutualfund_holders_date'), 'mutualfund_holders', ['date'], unique=False)
    op.create_index(op.f('ix_mutualfund_holders_symbol'), 'mutualfund_holders', ['symbol'], unique=False)
    op.create_table('news',
    sa.Column('id', sa.String(length=50), nullable=False, comment='ニュース記事固有ID'),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('content_type', sa.String(length=20), nullable=True, comment='コンテンツタイプ（STORY, VIDEO等）'),
    sa.Column('title', sa.String(length=1000), nullable=False, comment='記事タイトル'),
    sa.Column('description', sa.Text(), nullable=True, comment='記事説明'),
    sa.Column('summary', sa.Text(), nullable=True, comment='記事要約'),
    sa.Column('pub_date', sa.String(length=24), nullable=False, comment='公開日時'),
    sa.Column('display_time', sa.String(length=24), nullable=True, comment='表示日時'),
    sa.Column('provider_name', sa.String(length=200), nullable=True, comment='配信元名称'),
    sa.Column('provider_url', sa.String(length=500), nullable=True, comment='配信元URL'),
    sa.Column('canonical_url', sa.String(length=1000), nullable=True, comment='正規URL'),
    sa.Column('click_through_url', sa.String(length=1000), nullable=True, comment='クリックスルーURL'),
    sa.Column('preview_url', sa.String(length=1000), nullable=True, comment='プレビューURL'),
    sa.Column('is_hosted', sa.String(length=10), nullable=True, comment='ホスト記事フラグ'),
    sa.Column('bypass_modal', sa.String(length=10), nullable=True, comment='モーダルバイパスフラグ'),
    sa.Column('editors_pick', sa.String(length=10), nullable=True, comment='編集者おすすめフラグ'),
    sa.Column('is_premium_news', sa.String(length=10), nullable=True, comment='プレミアムニュースフラグ'),
    sa.Column('is_premium_free_news', sa.String(length=10), nullable=True, comment='プレミアム無料ニュースフラグ'),
    sa.Column('site', sa.String(length=50), nullable=True, comment='サイト'),
    sa.Column('region', sa.String(length=10), nullable=True, comment='地域'),
    sa.Column('lang', sa.String(length=10), nullable=True, comment='言語'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_news_id'), 'news', ['id'], unique=False)
    op.create_index(op.f('ix_news_pub_date'), 'news', ['pub_date'], unique=False)
    op.create_index(op.f('ix_news_symbol'), 'news', ['symbol'], unique=False)
    op.create_table('recommendations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('period', sa.String(length=10), nullable=False, comment='期間（0m, -1m, -2m, -3mなど）'),
    sa.Column('strong_buy', sa.Integer(), nullable=True, comment='強買い推奨数'),
    sa.Column('buy', sa.Integer(), nullable=True, comment='買い推奨数'),
    sa.Column('hold', sa.Integer(), nullable=True, comment='ホールド推奨数'),
    sa.Column('sell', sa.Integer(), nullable=True, comment='売り推奨数'),
    sa.Column('strong_sell', sa.Integer(), nullable=True, comment='強売り推奨数'),
    sa.Column('total_analysts', sa.Integer(), nullable=True, comment='総アナリスト数'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recommendations_period'), 'recommendations', ['period'], unique=False)
    op.create_index(op.f('ix_recommendations_symbol'), 'recommendations', ['symbol'], unique=False)
    op.create_table('revenue_estimates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('period_type', sa.String(length=10), nullable=False, comment='期間タイプ（0q, +1q, 0y, +1yなど）'),
    sa.Column('avg', sa.Float(), nullable=True, comment='平均予想売上'),
    sa.Column('low', sa.Float(), nullable=True, comment='最低予想売上'),
    sa.Column('high', sa.Float(), nullable=True, comment='最高予想売上'),
    sa.Column('number_of_analysts', sa.Integer(), nullable=True, comment='アナリスト数'),
    sa.Column('year_ago_revenue', sa.Float(), nullable=True, comment='前年同期売上'),
    sa.Column('growth', sa.Float(), nullable=True, comment='成長率'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_revenue_estimates_period_type'), 'revenue_estimates', ['period_type'], unique=False)
    op.create_index(op.f('ix_revenue_estimates_symbol'), 'revenue_estimates', ['symbol'], unique=False)
    op.create_table('sustainability',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('max_age', sa.Integer(), nullable=True, comment='データ最大経過時間（秒）'),
    sa.Column('rating_year', sa.Integer(), nullable=True, comment='評価年'),
    sa.Column('rating_month', sa.Integer(), nullable=True, comment='評価月'),
    sa.Column('total_esg', sa.Float(), nullable=True, comment='総合ESGスコア'),
    sa.Column('environment_score', sa.Float(), nullable=True, comment='環境スコア'),
    sa.Column('social_score', sa.Float(), nullable=True, comment='社会スコア'),
    sa.Column('governance_score', sa.Float(), nullable=True, comment='ガバナンススコア'),
    sa.Column('highest_controversy', sa.Float(), nullable=True, comment='最高論争レベル'),
    sa.Column('esg_performance', sa.String(length=50), nullable=True, comment='ESGパフォーマンス（LAG_PERF等）'),
    sa.Column('peer_count', sa.Integer(), nullable=True, comment='ピア企業数'),
    sa.Column('peer_group', sa.String(length=100), nullable=True, comment='ピアグループ名'),
    sa.Column('peer_esg_min', sa.Float(), nullable=True, comment='ピアESG最低スコア'),
    sa.Column('peer_esg_avg', sa.Float(), nullable=True, comment='ピアESG平均スコア'),
    sa.Column('peer_esg_max', sa.Float(), nullable=True, comment='ピアESG最高スコア'),
    sa.Column('peer_governance_min', sa.Float(), nullable=True, comment='ピアガバナンス最低スコア'),
    sa.Column('peer_governance_avg', sa.Float(), nullable=True, comment='ピアガバナンス平均スコア'),
    sa.Column('peer_governance_max', sa.Float(), nullable=True, comment='ピアガバナンス最高スコア'),
    sa.Column('peer_social_min', sa.Float(), nullable=True, comment='ピア社会最低スコア'),
    sa.Column('peer_social_avg', sa.Float(), nullable=True, comment='ピア社会平均スコア'),
    sa.Column('peer_social_max', sa.Float(), nullable=True, comment='ピア社会最高スコア'),
    sa.Column('peer_environment_min', sa.Float(), nullable=True, comment='ピア環境最低スコア'),
    sa.Column('peer_environment_avg', sa.Float(), nullable=True, comment='ピア環境平均スコア'),
    sa.Column('peer_environment_max', sa.Float(), nullable=True, comment='ピア環境最高スコア'),
    sa.Column('peer_controversy_min', sa.Float(), nullable=True, comment='ピア論争最低レベル'),
    sa.Column('peer_controversy_avg', sa.Float(), nullable=True, comment='ピア論争平均レベル'),
    sa.Column('peer_controversy_max', sa.Float(), nullable=True, comment='ピア論争最高レベル'),
    sa.Column('percentile', sa.Float(), nullable=True, comment='総合パーセンタイル'),
    sa.Column('environment_percentile', sa.Float(), nullable=True, comment='環境パーセンタイル'),
    sa.Column('social_percentile', sa.Float(), nullable=True, comment='社会パーセンタイル'),
    sa.Column('governance_percentile', sa.Float(), nullable=True, comment='ガバナンスパーセンタイル'),
    sa.Column('related_controversy', sa.Text(), nullable=True, comment='関連論争内容（JSON形式）'),
    sa.Column('adult', sa.String(length=10), nullable=True, comment='アダルト産業フラグ'),
    sa.Column('alcoholic', sa.String(length=10), nullable=True, comment='アルコール産業フラグ'),
    sa.Column('animal_testing', sa.String(length=10), nullable=True, comment='動物実験フラグ'),
    sa.Column('catholic', sa.String(length=10), nullable=True, comment='カトリック投資制限フラグ'),
    sa.Column('controversial_weapons', sa.String(length=10), nullable=True, comment='論争兵器フラグ'),
    sa.Column('small_arms', sa.String(length=10), nullable=True, comment='小火器フラグ'),
    sa.Column('fur_leather', sa.String(length=10), nullable=True, comment='毛皮・革製品フラグ'),
    sa.Column('gambling', sa.String(length=10), nullable=True, comment='ギャンブル産業フラグ'),
    sa.Column('gmo', sa.String(length=10), nullable=True, comment='遺伝子組み換え作物フラグ'),
    sa.Column('military_contract', sa.String(length=10), nullable=True, comment='軍事契約フラグ'),
    sa.Column('nuclear', sa.String(length=10), nullable=True, comment='原子力産業フラグ'),
    sa.Column('pesticides', sa.String(length=10), nullable=True, comment='農薬フラグ'),
    sa.Column('palm_oil', sa.String(length=10), nullable=True, comment='パーム油フラグ'),
    sa.Column('coal', sa.String(length=10), nullable=True, comment='石炭産業フラグ'),
    sa.Column('tobacco', sa.String(length=10), nullable=True, comment='タバコ産業フラグ'),
    sa.Column('created_at', sa.String(length=24), nullable=True),
    sa.Column('updated_at', sa.String(length=24), nullable=True),
    sa.ForeignKeyConstraint(['symbol'], ['stock_info.symbol'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sustainability_symbol'), 'sustainability', ['symbol'], unique=False)
    op.drop_index(op.f('ix_stocks_symbol'), table_name='stocks')
    op.drop_table('stocks')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stocks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('company_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('sector', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('industry', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('market_cap', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('current_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('stocks_pkey'))
    )
    op.create_index(op.f('ix_stocks_symbol'), 'stocks', ['symbol'], unique=True)
    op.drop_index(op.f('ix_sustainability_symbol'), table_name='sustainability')
    op.drop_table('sustainability')
    op.drop_index(op.f('ix_revenue_estimates_symbol'), table_name='revenue_estimates')
    op.drop_index(op.f('ix_revenue_estimates_period_type'), table_name='revenue_estimates')
    op.drop_table('revenue_estimates')
    op.drop_index(op.f('ix_recommendations_symbol'), table_name='recommendations')
    op.drop_index(op.f('ix_recommendations_period'), table_name='recommendations')
    op.drop_table('recommendations')
    op.drop_index(op.f('ix_news_symbol'), table_name='news')
    op.drop_index(op.f('ix_news_pub_date'), table_name='news')
    op.drop_index(op.f('ix_news_id'), table_name='news')
    op.drop_table('news')
    op.drop_index(op.f('ix_mutualfund_holders_symbol'), table_name='mutualfund_holders')
    op.drop_index(op.f('ix_mutualfund_holders_date'), table_name='mutualfund_holders')
    op.drop_table('mutualfund_holders')
    op.drop_index(op.f('ix_major_holders_symbol'), table_name='major_holders')
    op.drop_table('major_holders')
    op.drop_index(op.f('ix_institutional_holders_symbol'), table_name='institutional_holders')
    op.drop_index(op.f('ix_institutional_holders_date'), table_name='institutional_holders')
    op.drop_table('institutional_holders')
    op.drop_index(op.f('ix_insider_purchases_symbol'), table_name='insider_purchases')
    op.drop_table('insider_purchases')
    op.drop_index(op.f('ix_income_statements_symbol'), table_name='income_statements')
    op.drop_index(op.f('ix_income_statements_date'), table_name='income_statements')
    op.drop_table('income_statements')
    op.drop_index(op.f('ix_history_symbol'), table_name='history')
    op.drop_index(op.f('ix_history_date'), table_name='history')
    op.drop_table('history')
    op.drop_index(op.f('ix_growth_estimates_symbol'), table_name='growth_estimates')
    op.drop_index(op.f('ix_growth_estimates_period_type'), table_name='growth_estimates')
    op.drop_table('growth_estimates')
    op.drop_index(op.f('ix_financials_symbol'), table_name='financials')
    op.drop_index(op.f('ix_financials_date'), table_name='financials')
    op.drop_table('financials')
    op.drop_index(op.f('ix_fast_info_symbol'), table_name='fast_info')
    op.drop_table('fast_info')
    op.drop_index(op.f('ix_eps_trends_symbol'), table_name='eps_trends')
    op.drop_index(op.f('ix_eps_trends_period_type'), table_name='eps_trends')
    op.drop_table('eps_trends')
    op.drop_index(op.f('ix_eps_revisions_symbol'), table_name='eps_revisions')
    op.drop_index(op.f('ix_eps_revisions_period_type'), table_name='eps_revisions')
    op.drop_table('eps_revisions')
    op.drop_index(op.f('ix_earnings_history_symbol'), table_name='earnings_history')
    op.drop_index(op.f('ix_earnings_history_date'), table_name='earnings_history')
    op.drop_table('earnings_history')
    op.drop_index(op.f('ix_earnings_estimates_symbol'), table_name='earnings_estimates')
    op.drop_index(op.f('ix_earnings_estimates_period_type'), table_name='earnings_estimates')
    op.drop_table('earnings_estimates')
    op.drop_index(op.f('ix_earnings_dates_symbol'), table_name='earnings_dates')
    op.drop_index(op.f('ix_earnings_dates_date'), table_name='earnings_dates')
    op.drop_table('earnings_dates')
    op.drop_index(op.f('ix_dividends_symbol'), table_name='dividends')
    op.drop_index(op.f('ix_dividends_date'), table_name='dividends')
    op.drop_table('dividends')
    op.drop_index(op.f('ix_cash_flows_symbol'), table_name='cash_flows')
    op.drop_index(op.f('ix_cash_flows_date'), table_name='cash_flows')
    op.drop_table('cash_flows')
    op.drop_index(op.f('ix_calendars_symbol'), table_name='calendars')
    op.drop_table('calendars')
    op.drop_index(op.f('ix_balancesheets_symbol'), table_name='balancesheets')
    op.drop_index(op.f('ix_balancesheets_date'), table_name='balancesheets')
    op.drop_table('balancesheets')
    op.drop_index(op.f('ix_actions_symbol'), table_name='actions')
    op.drop_index(op.f('ix_actions_date'), table_name='actions')
    op.drop_table('actions')
    op.drop_table('stock_info')
    # ### end Alembic commands ###
